{"ast":null,"code":"var _jsxFileName = \"/Users/clhsu123/litterpicker/react-ape/socialape-client/src/pages/signup.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport AppIcon from '../images/dog_lover.png';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress'; //MUI Stuff\n\nimport Grid from '@material-ui/core/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({ ...theme\n});\n\nexport class signup extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const newUserData = {\n        email: this.state.email,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword,\n        handle: this.state.handle\n      };\n      axios.post('/signup', newUserData).then(res => {\n        console.log(res.data);\n        localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`);\n        this.setState({\n          loading: false\n        }); //Redirect to the home page\n\n        this.props.history.push('/');\n      }).catch(err => {\n        this.setState({\n          errors: err.response.data,\n          loading: false\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      handle: '',\n      loading: false,\n      errors: {}\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      errors,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true,\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://pngtree.com/so/apparel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: AppIcon,\n          alt: \"dog_lover\",\n          width: \"300\",\n          height: \"300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          className: classes.pageTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"email\",\n            name: \"email\",\n            type: \"email\",\n            label: \"Email\",\n            className: classes.textField,\n            helperText: errors.email,\n            error: errors.email ? true : false,\n            value: this.state.email,\n            onChange: this.handleChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            name: \"password\",\n            type: \"password\",\n            label: \"Password\",\n            className: classes.textField,\n            helperText: errors.password,\n            error: errors.password ? true : false,\n            value: this.state.password,\n            onChange: this.handleChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), errors.general && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            className: classes.customError,\n            children: errors.general\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            color: \"primary\",\n            className: classes.button,\n            disabled: loading,\n            children: [\"Login\", loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20,\n              className: classes.progress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\" Don't have an account? Sign up \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              children: \"here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 64\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nlogin.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(login);","map":{"version":3,"sources":["/Users/clhsu123/litterpicker/react-ape/socialape-client/src/pages/signup.js"],"names":["React","Component","withStyles","TextField","PropTypes","AppIcon","Typography","Button","axios","Link","CircularProgress","Grid","styles","theme","signup","constructor","handleSubmit","event","preventDefault","setState","loading","newUserData","email","state","password","confirmPassword","handle","post","then","res","console","log","data","localStorage","setItem","token","props","history","push","catch","err","errors","response","handleChange","target","name","value","render","classes","form","pageTitle","textField","general","customError","button","progress","login","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport AppIcon from '../images/dog_lover.png';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n//MUI Stuff\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = (theme) => ({\n    ...theme\n});\n\n\nexport class signup extends Component {\n    constructor(){\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            confirmPassword: '',\n            handle: '',\n            loading: false,\n            errors: {}\n        };\n    };\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({\n            loading: true\n        });\n        const newUserData = {\n            email: this.state.email,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword,\n            handle: this.state.handle\n        };\n        axios\n            .post('/signup', newUserData)\n            .then(res=>{\n                console.log(res.data);\n                localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`)\n                this.setState({\n                    loading: false\n                });\n                //Redirect to the home page\n                this.props.history.push('/');\n            })\n            .catch(err => {\n                this.setState({\n                    errors: err.response.data,\n                    loading: false\n                });\n            });\n    };\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n    render() {\n        const { classes } = this.props; \n        const { errors, loading } = this.state;\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm/>\n                <Grid item sm>\n                    <a href='https://pngtree.com/so/apparel'></a>\n                    <img src={AppIcon} alt=\"dog_lover\" width = \"300\" height = \"300\"/>\n                    <Typography variant=\"h2\" className={classes.pageTitle}>\n                        \n                    </Typography>\n                    <form noValidate onSubmit={this.handleSubmit}>\n                        <TextField \n                            id=\"email\"\n                            name=\"email\"\n                            type=\"email\" \n                            label=\"Email\" \n                            className={classes.textField} \n                            helperText={errors.email}\n                            error={errors.email ? true : false}\n                            value={this.state.email} \n                            onChange={this.handleChange} \n                            fullWidth\n                        />\n                        <TextField id=\"password\"\n                            name=\"password\" \n                            type=\"password\" \n                            label=\"Password\" \n                            className={classes.textField} \n                            helperText={errors.password} \n                            error={errors.password ? true : false}\n                            value={this.state.password} \n                            onChange={this.handleChange} \n                            fullWidth\n                        />\n                        {errors.general && (\n                            <Typography variant=\"body2\" className={classes.customError}>\n                                {errors.general}\n                            </Typography>\n                        )}\n                        <Button \n                            type=\"submit\" \n                            color=\"primary\" \n                            className={classes.button}\n                            disabled={loading}\n                        >\n                            Login\n                            {loading && (\n                                <CircularProgress size = {20} className={classes.progress}/>\n                            )}\n                        </Button>\n                        <br />\n                        <small> Don't have an account? Sign up <Link to=\"/signup\">here</Link> </small>\n                    </form>\n                </Grid>\n                <Grid item sm/>\n            </Grid>\n        )\n    }\n}\n\nlogin.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(login)"]},"metadata":{},"sourceType":"module"}